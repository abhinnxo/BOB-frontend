<Card
          variannt="primary"
          className="text-primary"
          // onClick={}
          style={{ width: "18rem", display: "grid", placeItems: "center" }}
        >
          <i class="bi bi-plus-lg"></i>
          Add New Team
        </Card>

           {host && (
          <input
            type="text"
            name="teamname"
            placeholder="Enter Team Name"
            onChange={(e) => setTeamname(e.target.value)}
            id=""
          />
        )}

        {!host && <h4 className="my-auto">{teamname}</h4>}

         const hostroom = () => {
    if (nickname === "") {
      document.querySelector("#no-nickname").classList.remove("d-none");
      setTimeout(() => {
        document.querySelector("#no-nickname").classList.add("d-none");
      }, 3000);
    } else {
      localStorage.setItem("roomid", customId({}));
      localStorage.setItem("host", true);
      history.push({
        pathname: "/waitinglobby",
        state: {
          nickname,
          roomid,
          host: true,
        },
      });
    }
  };

  import React, { useEffect, useState } from "react";
import "../css/login.css";
import { Card, Button, Alert } from "react-bootstrap";
import { useHistory } from "react-router-dom";

const Login = () => {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");

  useEffect(() => {
    console.log(username);
  }, [username]);

  const history = useHistory();

  const login = (e) => {
    e.preventDefault();

    if (username === "admin" && password === "admin") {
      history.push({
        pathname: "/newgame",
      });
    } else {
      document.querySelector("#wrong-alert").classList.remove("d-none");
    }
  };

  return (
    <div>
      <div className="display-5 jumbotron py-5 text-center">
        Battle of Brains
      </div>
      <Card style={{ width: "18rem" }} id="login-card">
        <Card.Body>
          <Card.Title>Login</Card.Title>
          <Card.Text>username/password = "admin"</Card.Text>
          <form>
            <label htmlFor="username">Username</label>
            <br />
            <input type="text" onChange={(e) => setUsername(e.target.value)} />
            <br />
            <label htmlFor="password">Password</label>
            <br />
            <input
              type="password"
              name="password"
              onChange={(e) => setPassword(e.target.value)}
            />
            <br />
            <Button variant="primary" onClick={login} className="mt-2">
              login
            </Button>
          </form>
        </Card.Body>
        <Alert variant="danger" className="d-none" id="wrong-alert">
          Wrong Username or Password entered!
        </Alert>
      </Card>
    </div>
  );
};

export default Login;


  <div class="chat-container" style={{ backgroundColor: team }}>
        <header class="chat-header">
          <h1>Battle of Brains</h1>
          <h1 id="room-name"></h1>
          <a id="leave-btn" class="btn">
            Leave Room
          </a>
        </header>
        <main class="chat-main">
          <div class="chat-sidebar">
            <h3>Players</h3>
            <ul id="users">{playerList}</ul>
          </div>
          <div class="chat-messages"></div>
        </main>
        <div class="chat-form-container">
          <form id="chat-form">
            <input
              id="msg"
              type="text"
              placeholder="Give a one-word clue!"
              required
              autocomplete="off"
            />
            <button class="btn">Send</button>
          </form>
        </div>
      </div>

        <Card
        bg="success"
        text="white"
        style={{ width: "18rem" }}
        className="mb-2"
      >
        <Card.Header>Header</Card.Header>
        <Card.Body>
          <Card.Title>Card Title </Card.Title>
          <Card.Text>
            Some quick example text to build on the card title and make up the
            bulk of the card's content.
          </Card.Text>
        </Card.Body>
      </Card>


            <Modal
            show={show}
            onHide={handleClose}
            backdrop="static"
            keyboard={false}
          >
            <Modal.Header closeButton>
              <Modal.Title>Select Your Team</Modal.Title>
            </Modal.Header>
            <Modal.Body className="d-flex flex-column">
              <Button variant="danger" className="my-1" onClick={joinTeamRed}>
                Join Team Red
              </Button>
              <Button variant="primary" className="my-1" onClick={joinTeamBlue}>
                Join Team Blue
              </Button>
            </Modal.Body>
          </Modal>